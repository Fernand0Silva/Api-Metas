// <auto-generated />
using Api_Metas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api_Metas.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240429143105_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api_Metas.Models.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Classe")
                        .HasColumnType("int");

                    b.Property<string>("Meta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Tempo")
                        .HasColumnType("real");

                    b.Property<string>("Urgencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("TB_Metas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Classe = 0,
                            Meta = "Compra uma moto",
                            Nome = "Luiz",
                            Tempo = 2f,
                            Urgencia = "baixa",
                            Valor = 10000f
                        },
                        new
                        {
                            Id = 2,
                            Classe = 0,
                            Meta = "Compra uma casa",
                            Nome = "Asteris",
                            Tempo = 20f,
                            Urgencia = "baixa",
                            Valor = 400000f
                        },
                        new
                        {
                            Id = 3,
                            Classe = 0,
                            Meta = "Compra um vestido",
                            Nome = "Elizabete",
                            Tempo = 1f,
                            Urgencia = "alta",
                            Valor = 400f
                        },
                        new
                        {
                            Id = 4,
                            Classe = 0,
                            Meta = "Compra uma TV",
                            Nome = "Rafael",
                            Tempo = 1f,
                            Urgencia = "alta",
                            Valor = 2000f
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
